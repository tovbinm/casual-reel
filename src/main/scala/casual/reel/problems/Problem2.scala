package casual.reel.problems


/*
  Problem 2:
  Each new term in the Fibonacci sequence is generated by adding the previous two terms.
  By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
  By considering the terms in the Fibonacci sequence whose values do not exceed four million,
  find the sum of the even-valued terms.
 */

class Problem2(val max: Int) {

  def solve = {
    def fib (n: Int, m: Int): Stream[Int] = n #:: fib ( m, n + m )

    fib(1, 2) takeWhile { _ < max } filter { _ % 2 == 0 } sum
  }

}
